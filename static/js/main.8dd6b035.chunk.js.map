{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactList/ListElement/ListElement.module.css","redux/actions.js","redux/operations.js","redux/selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ListElement/ListElement.jsx","components/ContactList/ContactList.jsx","App.js","redux/reducers.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","getContactsRequest","createAction","getContactsSuccess","getContactsError","changeFilter","addItemRequest","addItemSuccess","addItemError","removeItemRequest","removeItemSuccess","removeItemError","axios","defaults","baseURL","getItems","state","contacts","items","getFilter","filter","getLoadingState","loading","connect","selectors","dispatch","addNewContact","newContact","name","number","item","post","then","data","catch","error","addItem","labelNameId","uuidv4","labelNumberId","inputNameProps","id","type","pattern","title","inputNumberProps","useState","setName","setNumber","handleInput","e","target","value","isNewContactValid","toLowerCase","length","alert","reset","className","s","contactForm","onSubmit","preventDefault","nameBlock","htmlFor","labelName","required","onChange","numberBlock","labelNumber","filterHandler","event","filterInput","deleteHandler","delete","deleteBtnNameAsId","onClick","isLoaderActive","contactsList","filterWord","includes","getInitialContacts","get","useEffect","wrapper","map","App","itemsReducer","createReducer","_","payload","filterReducer","loadingReducer","contactsReducer","combineReducers","myMiddleware","store","next","action","console","log","configureStore","reducer","middleware","getDefaultMiddleware","concat","logger","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8dd6b035.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"ContactList_loading__HU5qS\",\"wrapper\":\"ContactList_wrapper__32iG5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__3MJ7t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"delete\":\"ListElement_delete__2cUOt\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const getContactsRequest = createAction('items/getContactsRequest');\r\nexport const getContactsSuccess = createAction('items/getContactsSuccess');\r\nexport const getContactsError = createAction('items/getContactsError');\r\n\r\nexport const changeFilter = createAction('filter/changeFilter');\r\n\r\nexport const addItemRequest = createAction('items/addItemRequest');\r\nexport const addItemSuccess = createAction('items/addItemSuccess');\r\nexport const addItemError = createAction('items/addItemError');\r\n\r\nexport const removeItemRequest = createAction('items/removeItemRequest');\r\nexport const removeItemSuccess = createAction('items/removeItemSuccess');\r\nexport const removeItemError = createAction('items/removeItemError');\r\n\r\nexport const filterItemsRequest = createAction('items/filterItemsRequest');\r\nexport const filterItemsSuccess = createAction('items/filterItemsSuccess');\r\nexport const filterItemsError = createAction('items/filterItemsError');\r\n","import axios from 'axios';\r\nimport {\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  getContactsError,\r\n  addItemRequest,\r\n  addItemSuccess,\r\n  addItemError,\r\n  removeItemRequest,\r\n  removeItemSuccess,\r\n  removeItemError,\r\n} from './actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:3333';\r\n\r\nexport const getContacts = () => dispatch => {\r\n  dispatch(getContactsRequest());\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(getContactsSuccess(data)))\r\n    .catch(error => dispatch(getContactsError(error)));\r\n};\r\n\r\nexport const addItem =\r\n  ({ name, number }) =>\r\n  dispatch => {\r\n    const item = {\r\n      name,\r\n      number,\r\n    };\r\n\r\n    dispatch(addItemRequest());\r\n\r\n    axios\r\n      .post('/contacts/', item)\r\n      .then(({ data }) => dispatch(addItemSuccess(data)))\r\n      .catch(error => {\r\n        dispatch(addItemError(error));\r\n      });\r\n  };\r\n\r\nexport const removeItem = id => dispatch => {\r\n  dispatch(removeItemRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(removeItemSuccess(id)))\r\n    .catch(error => {\r\n      dispatch(removeItemError(error));\r\n    });\r\n};\r\n","/* ---- selectors for mapStateToProps only ! ---- */\r\n\r\nexport const getItems = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\nexport const getLoadingState = state => state.contacts.loading;\r\n","import { v4 as uuidv4 } from 'uuid';\r\nimport '../../App';\r\nimport { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactForm.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { addItem } from '../../redux/operations';\r\nimport * as selectors from '../../redux/selectors';\r\n\r\nconst ContactForm = ({ items, addNewContact }) => {\r\n  const labelNameId = uuidv4();\r\n  const labelNumberId = uuidv4();\r\n\r\n  const inputNameProps = {\r\n    id: labelNameId,\r\n    type: 'text',\r\n    name: 'name',\r\n    pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\r\n    title:\r\n      \"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\",\r\n  };\r\n\r\n  const inputNumberProps = {\r\n    id: labelNumberId,\r\n    type: 'tel',\r\n    name: 'number',\r\n    pattern:\r\n      '\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}',\r\n    title:\r\n      'Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +',\r\n  };\r\n\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleInput = e => {\r\n    const { value, name } = e.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleFormSubmit = e => {\r\n    e.preventDefault();\r\n    isNewContactValid({ id: uuidv4() });\r\n    reset();\r\n  };\r\n\r\n  const isNewContactValid = ({ id }) => {\r\n    const matchedContactsList = items.filter(item => {\r\n      return item.name.toLowerCase() === name.toLowerCase();\r\n    });\r\n    if (matchedContactsList.length !== 0) {\r\n      alert(`${name} is already in contacts.`);\r\n    } else {\r\n      addNewContact({ id, name, number });\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form className={s.contactForm} onSubmit={handleFormSubmit}>\r\n      <div className={s.nameBlock}>\r\n        <label htmlFor={labelNameId} className={s.labelName}>\r\n          Name\r\n        </label>\r\n        <input\r\n          value={name}\r\n          required\r\n          {...inputNameProps}\r\n          onChange={handleInput}\r\n        />\r\n      </div>\r\n      <div className={s.numberBlock}>\r\n        <label htmlFor={labelNumberId} className={s.labelNumber}>\r\n          Number\r\n        </label>\r\n\r\n        <input\r\n          value={number}\r\n          required\r\n          {...inputNumberProps}\r\n          onChange={handleInput}\r\n        />\r\n      </div>\r\n      <button type=\"submit\">Add contact </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nContactForm.propTypes = {\r\n  items: PropTypes.array.isRequired,\r\n  addNewContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    items: selectors.getItems(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addNewContact: newContact => dispatch(addItem(newContact)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import s from './Filter.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { changeFilter } from '../../redux/actions';\r\nimport * as selectors from '../../redux/selectors';\r\n\r\nconst Filter = ({ value, filterHandler }) => {\r\n  return (\r\n    <div>\r\n      Find contacts by name\r\n      <input\r\n        className={s.filterInput}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={filterHandler}\r\n      ></input>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    //state props for Filter:\r\n    value: selectors.getFilter(state),\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    //action props for Filter:\r\n    filterHandler: event => dispatch(changeFilter(event.target.value)),\r\n  };\r\n};\r\n\r\n//export default Filter;\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import PropTypes from 'prop-types';\r\nimport s from './ListElement.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { removeItem } from '../../../redux/operations';\r\n\r\nconst ListElement = ({ name, number, deleteBtnNameAsId, deleteHandler }) => {\r\n  return (\r\n    <li>\r\n      {name}: {number}\r\n      <button\r\n        className={s.delete}\r\n        type=\"button\"\r\n        name={deleteBtnNameAsId}\r\n        onClick={deleteHandler}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nListElement.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  deleteBtnNameAsId: PropTypes.string.isRequired,\r\n  deleteHandler: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    //action props for Filter:\r\n    deleteHandler: event => dispatch(removeItem(event.target.name)),\r\n  };\r\n};\r\n\r\n//export default Filter;\r\nexport default connect(null, mapDispatchToProps)(ListElement);\r\n","import ListElement from './ListElement';\r\nimport { connect } from 'react-redux';\r\nimport { PropTypes } from 'prop-types';\r\nimport { getContacts } from '../../redux/operations';\r\nimport * as selectors from '../../redux/selectors';\r\nimport { useEffect } from 'react';\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contactsList, getInitialContacts, isLoaderActive }) => {\r\n  useEffect(() => {\r\n    getInitialContacts();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <ul className={s.wrapper}>\r\n      {isLoaderActive && <h2 className={s.loading}>Loading...</h2>}\r\n      {contactsList.map(({ id, name, number }) => {\r\n        return (\r\n          <ListElement\r\n            key={id}\r\n            name={name}\r\n            number={number}\r\n            deleteBtnNameAsId={id}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contactsList: PropTypes.array.isRequired,\r\n};\r\n\r\nconst filteredContactList = function (contacts, filterWord) {\r\n  let result = [];\r\n  result = contacts.filter(item => {\r\n    return item.name.toLowerCase().includes(filterWord.toLowerCase());\r\n  });\r\n  return result;\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    //state props for Filter:\r\n    isLoaderActive: selectors.getLoadingState(state),\r\n    contactsList: filteredContactList(\r\n      selectors.getItems(state),\r\n      selectors.getFilter(state),\r\n    ),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getInitialContacts: () => dispatch(getContacts()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default App;\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport {\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  getContactsError,\r\n  addItemRequest,\r\n  addItemSuccess,\r\n  addItemError,\r\n  changeFilter,\r\n  removeItemRequest,\r\n  removeItemSuccess,\r\n  removeItemError,\r\n} from './actions';\r\n\r\nconst itemsReducer = createReducer([], {\r\n  [getContactsSuccess]: (_, { payload }) => payload,\r\n\r\n  [addItemSuccess]: (state, { payload }) => [...state, payload],\r\n\r\n  [removeItemSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filterReducer = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loadingReducer = createReducer(false, {\r\n  [getContactsRequest]: () => true,\r\n  [getContactsSuccess]: () => false,\r\n  [getContactsError]: () => false,\r\n\r\n  [addItemRequest]: () => true,\r\n  [addItemSuccess]: () => false,\r\n  [addItemError]: () => false,\r\n\r\n  [removeItemRequest]: () => true,\r\n  [removeItemSuccess]: () => false,\r\n  [removeItemError]: () => false,\r\n});\r\n\r\nconst contactsReducer = combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n  loading: loadingReducer,\r\n});\r\n\r\nexport default contactsReducer;\r\n","//---------redux-------------\r\n//import { createStore } from 'redux';\r\n//import rootReducer from './reducers';\r\n//import { composeWithDevTools } from 'redux-devtools-extension';\r\n//---------------------------\r\n\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport contactsReducer from './reducers';\r\nimport logger from 'redux-logger';\r\n\r\nconst myMiddleware = store => next => action => {\r\n  console.log('my MiddleWare - for testing only ');\r\n  next(action);\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware: getDefaultMiddleware =>\r\n    getDefaultMiddleware().concat(myMiddleware).concat(logger),\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__3gPPT\",\"labelName\":\"ContactForm_labelName__2pSVt\",\"labelNumber\":\"ContactForm_labelNumber__1Xreq\",\"nameBlock\":\"ContactForm_nameBlock__3jnAU\",\"numberBlock\":\"ContactForm_numberBlock__12ZMH\"};"],"sourceRoot":""}